#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        less_then {
            bindings = <&kp LESS_THAN>;
            key-positions = <43 44>;
            timeout-ms = <60>;
            layers = <0 1 4 5>;
        };

        greater_then {
            bindings = <&kp GREATER_THAN>;
            key-positions = <44 45>;
            timeout-ms = <60>;
            layers = <0 1 4 5>;
        };

        zx_undo {
            bindings = <&kp LG(Z)>;
            key-positions = <37 38>;
            timeout-ms = <60>;
            layers = <0>;
        };

        xc_copy {
            bindings = <&kp LG(C)>;
            key-positions = <38 39>;
            timeout-ms = <60>;
            layers = <0>;
        };

        cv_paste {
            bindings = <&kp LG(V)>;
            key-positions = <40 39>;
            timeout-ms = <60>;
            layers = <0>;
        };

        xv_cute {
            bindings = <&kp LG(X)>;
            key-positions = <40 38>;
            timeout-ms = <60>;
            layers = <0>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <37 38>;
            timeout-ms = <60>;
            layers = <4>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <38 39>;
            timeout-ms = <60>;
            layers = <4>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <40 39>;
            timeout-ms = <60>;
            layers = <4>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <40 38>;
            timeout-ms = <60>;
            layers = <4>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <28 27>;
            timeout-ms = <60>;
            layers = <0 4>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <31 32>;
            timeout-ms = <60>;
            layers = <0 4>;
        };

        vim_search {
            bindings = <&vim_search>;
            key-positions = <28 27>;
            timeout-ms = <60>;
            layers = <2 6>;
        };
    };

    macros {
        caps: caps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CAPSLOCK>;
            label = "CAPS";
            tap-ms = <200>;
        };

        my_email: my_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp L &kp A &kp C &kp K &kp E &kp A &kp G &kp L &kp E &kp N1 &kp N0 &kp AT &kp I &kp C &kp L &kp O &kp U &kp D &kp DOT &kp C &kp O &kp M>;
            label = "MY_EMAIL";
        };

        vim_search: vim_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp PRCNT &kp S &kp FSLH>;
            label = "VIM_SEARCH";
        };
    };

    behaviors {
        new_lt: new_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
        };

        left_hrm: left_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
            hold-trigger-key-positions = <28 27 26 25 48 49 50 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 51 52 0>;
        };

        right_hrm: right_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
            hold-trigger-key-positions = <12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 31 32 33 34 52 51 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp SPACE  &none                   &none                     &none                 &none                 &none              &none             &none                   &none                   &none                       &none                        &none
&kp TILDE  &kp Q                   &kp W                     &kp E                 &kp R                 &kp T              &kp Y             &kp U                   &kp I                   &kp O                       &kp P                        &kp PIPE
&caps      &left_hrm LEFT_SHIFT A  &left_hrm LEFT_CONTROL S  &left_hrm LEFT_ALT D  &left_hrm LEFT_GUI F  &kp G              &kp H             &right_hrm RIGHT_GUI J  &right_hrm RIGHT_ALT K  &right_hrm RIGHT_CONTROL L  &right_hrm RIGHT_SHIFT SEMI  &kp APOS
&kp GRAVE  &kp Z                   &kp X                     &kp C                 &kp V                 &kp B              &kp N             &kp M                   &kp COMMA               &kp DOT                     &kp SLASH                    &kp BACKSLASH
                                                             &kp TAB               &kp BACKSPACE         &new_lt 1 ENTER    &new_lt 2 ESCAPE  &kp F16
                                                                                   &none                 &none              &none
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        layer_1 {
            bindings = <
&trans  &none            &none             &none              &none           &none              &none      &none          &none         &none                 &none                  &none
&trans  &kp EXCLAMATION  &kp AT            &kp HASH           &kp DOLLAR      &kp PERCENT        &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3             &kp N4          &kp N5             &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp DOUBLE_QUOTES
&trans  &none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp UNDER  &kp MINUS      &kp PLUS      &trans                &kp EQUAL              &trans
                                           &trans             &trans          &none              &mo 3      &trans
                                                              &none           &none              &none
            >;
        };

        layer_2 {
            bindings = <
&trans  &none   &none    &none    &none    &none              &none           &none           &none            &none            &none                 &none
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none              &kp C_MUTE      &kp PAGE_UP     &kp PAGE_DOWN    &kp C_PLAY       &kp DELETE            &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP           &kp RIGHT_ARROW  &kp C_BRIGHTNESS_INC  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp END            &kp C_PREVIOUS  &kp C_VOL_DN    &kp C_VOLUME_UP  &kp C_NEXT       &kp C_BRIGHTNESS_DEC  &trans
                         &trans   &trans   &new_lt 3 ENTER    &trans          &trans
                                  &none    &none              &none
            >;
        };

        layer_3 {
            bindings = <
&trans       &none          &none             &none             &none              &none              &none                 &none                 &none             &none          &none          &none
&none        &kp LA(LG(L))  &kp LG(NUMBER_1)  &kp LG(NUMBER_4)  &kp LG(NUMBER_6)   &kp LS(LC(R))      &bt BT_CLR            &kp LG(NUMBER_1)      &kp LG(NUMBER_2)  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&none        &kp LA(LG(Q))  &kp LG(F12)       &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LS(LG(F11))    &kp LC(F5)            &kp LC(GRAVE)         &kp LS(LG(M))     &kp LS(LG(E))  &kp LS(LG(P))  &to 4
&bootloader  &kp LS(LG(F))  &kp LS(LG(O))     &kp LA(LG(R))     &kp LA(LG(S))      &none              &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))    &kp LS(LC(G))  &kp LS(LA(F))  &bootloader
                                              &trans            &trans             &trans             &trans                &trans
                                                                &none              &none              &none
            >;
        };

        layer_4 {
            bindings = <
&kp SPACE  &none                   &none                     &none                 &none                 &none              &none             &none                  &none                  &none                      &none                       &none
&kp TILDE  &kp Q                   &kp W                     &kp E                 &kp R                 &kp T              &kp Y             &kp U                  &kp I                  &kp O                      &kp P                       &kp PIPE
&caps      &left_hrm LEFT_SHIFT A  &left_hrm LEFT_CONTROL S  &left_hrm LEFT_GUI D  &left_hrm LEFT_ALT F  &kp G              &kp H             &right_hrm LEFT_ALT J  &right_hrm LEFT_GUI K  &right_hrm LEFT_CONTROL L  &right_hrm LEFT_SHIFT SEMI  &kp APOS
&kp GRAVE  &kp Z                   &kp X                     &kp C                 &kp V                 &kp B              &kp N             &kp M                  &kp COMMA              &kp DOT                    &kp SLASH                   &kp BACKSLASH
                                                             &kp TAB               &kp BACKSPACE         &new_lt 5 ENTER    &new_lt 6 ESCAPE  &kp RIGHT_ALT
                                                                                   &none                 &none              &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &none            &none             &none              &none           &none              &none      &none          &none         &none                 &none                  &none
&trans  &kp EXCLAMATION  &kp AT            &kp HASH           &kp DOLLAR      &kp PERCENT        &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3             &kp N4          &kp N5             &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp DOUBLE_QUOTES
&trans  &none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp UNDER  &kp MINUS      &kp PLUS      &trans                &kp EQUAL              &trans
                                           &trans             &trans          &none              &mo 7      &trans
                                                              &none           &none              &none
            >;
        };

        layer_6 {
            bindings = <
&trans  &none   &none    &none    &none    &none              &none           &none           &none            &none            &none                 &none
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none              &kp C_MUTE      &kp PAGE_UP     &kp PAGE_DOWN    &kp C_PLAY       &kp DELETE            &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP           &kp RIGHT_ARROW  &kp C_BRIGHTNESS_INC  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp END            &kp C_PREVIOUS  &kp C_VOL_DN    &kp C_VOLUME_UP  &kp C_NEXT       &kp C_BRIGHTNESS_DEC  &trans
                         &trans   &trans   &new_lt 7 ENTER    &trans          &trans
                                  &none    &none              &none
            >;
        };

        layer_7 {
            bindings = <
&trans       &none          &none             &none             &none              &none          &none       &none             &none             &none          &none          &none
&none        &kp LA(LG(L))  &kp LA(NUMBER_1)  &kp LA(NUMBER_4)  &kp LA(NUMBER_6)   &kp LS(F10)    &bt BT_CLR  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&to 0        &kp LS(LA(Q))  &kp F12           &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LG(F11)    &kp LC(F5)  &kp LC(GRAVE)     &kp LS(LG(M))     &kp LS(LG(E))  &kp LS(LG(P))  &none
&bootloader  &kp LS(LC(F))  &kp LS(LC(O))     &kp LA(LG(R))     &kp LS(LA(S))      &none          &kp LA(F4)  &kp PRINTSCREEN   &none             &kp LS(LC(G))  &kp LS(LA(F))  &bootloader
                                              &trans            &trans             &trans         &trans      &trans
                                                                &none              &none          &none
            >;
        };
    };
};
