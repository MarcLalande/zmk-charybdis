#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        caps: caps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CAPSLOCK>;
            label = "CAPS";
            tap-ms = <200>;
        };
    };

    behaviors {
        new_lt: new_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
        };

        left_hrm: left_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
            hold-trigger-key-positions = <28 27 26 25 48 49 50 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 51 52>;
        };

        right_hrm: right_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
            hold-trigger-key-positions = <12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 31 32 33 34 52 51 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp SPACE     &none                   &none                     &none                 &none                 &none              &none             &none                   &none                   &none                       &none                        &none
&kp TILDE     &kp Q                   &kp W                     &kp E                 &kp R                 &kp T              &kp Y             &kp U                   &kp I                   &kp O                       &kp P                        &kp PIPE
&kp CAPSLOCK  &left_hrm LEFT_SHIFT A  &left_hrm LEFT_CONTROL S  &left_hrm LEFT_ALT D  &left_hrm LEFT_GUI F  &kp G              &kp H             &right_hrm RIGHT_GUI J  &right_hrm RIGHT_ALT K  &right_hrm RIGHT_CONTROL L  &right_hrm RIGHT_SHIFT SEMI  &kp APOS
&kp GRAVE     &kp Z                   &kp X                     &kp C                 &kp V                 &kp B              &kp N             &kp M                   &kp COMMA               &kp DOT                     &kp SLASH                    &kp BACKSLASH
                                                                &kp TAB               &kp BACKSPACE         &new_lt 1 ENTER    &new_lt 2 ESCAPE  &kp F16
                                                                                      &none                 &none              &none
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        layer_1 {
            bindings = <
&trans  &none            &none             &none              &none           &none              &none      &none          &none         &none                 &none                  &none
&trans  &kp EXCLAMATION  &kp AT            &kp HASH           &kp DOLLAR      &kp PERCENT        &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3             &kp N4          &kp N5             &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp DOUBLE_QUOTES
&trans  &none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp UNDER  &kp MINUS      &kp PLUS      &trans                &kp EQUAL              &trans
                                           &trans             &trans          &none              &mo 3      &trans
                                                              &none           &none              &none
            >;
        };

        layer_2 {
            bindings = <
&trans  &none   &none    &none    &none    &none              &none           &none           &none            &none            &none                 &none
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none              &kp C_MUTE      &kp PAGE_UP     &kp PAGE_DOWN    &kp C_PLAY       &kp DELETE            &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP           &kp RIGHT_ARROW  &kp C_BRIGHTNESS_INC  &kp DOUBLE_QUOTES
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp END            &kp C_PREVIOUS  &kp C_VOL_DN    &kp C_VOLUME_UP  &kp C_NEXT       &kp C_BRIGHTNESS_DEC  &trans
                         &trans   &trans   &new_lt 3 ENTER    &trans          &trans
                                  &none    &none              &none
            >;
        };

        layer_3 {
            bindings = <
&trans  &none          &none             &none             &none              &none              &none                 &none                 &none             &none          &none          &none
&none   &kp LA(LG(L))  &kp LG(NUMBER_1)  &kp LG(NUMBER_4)  &kp LG(NUMBER_6)   &kp LS(LC(R))      &bt BT_CLR            &kp LG(NUMBER_1)      &kp LG(NUMBER_2)  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&none   &kp LA(LG(Q))  &kp LG(F12)       &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LS(LG(F11))    &kp LC(F5)            &kp GRAVE             &kp LS(LG(M))     &kp LS(LG(E))  &kp LS(LG(P))  &none
&none   &kp LS(LG(F))  &kp LS(LG(O))     &kp LA(LG(R))     &kp LA(LG(S))      &none              &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))    &kp LS(LC(G))  &kp LS(LA(F))  &none
                                         &trans            &trans             &trans             &trans                &trans
                                                           &none              &none              &none
            >;
        };
    };
};
